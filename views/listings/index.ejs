<% layout("./layouts/boilerplate.ejs") %> 

<body>
    <style>
       #filters{
        display: flex;
        flex-wrap: wrap;
        align-items: center;
       }
       .filter{
        margin-right:1rem;
        margin-top: 1.5rem;
        text-align: center;
        opacity: 0.7;
       }
       .filter:hover{
        opacity: 1;
        cursor: pointer;
       }
       .filter p {
        font-size: 0.8rem;
       }

       .tax-info{
         display: none;
       }
       .tax-toggle{
        border: 1px solid black;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 3rem;
        border-radius: 1rem;
        padding: 1rem;
        margin-left: 5rem;
       }
    </style>
<div >
    <div id="filters">
    <div class="filter">
      <div><i class="fa-solid fa-fire"></i></div>
      <p> Trending</p>
    </div>
    <div class="filter" data-filter-property="Rooms">
      <div><i class="fa-solid fa-bed"></i></div>
      <p> Rooms</p>
    </div>
    <div class="filter" data-filter-property="Iconic cities">
      <div><i class="fa-solid fa-mountain-city"></i></div>
      <p> Iconic cities</p>
    </div>
    <div class="filter" data-filter-property="Mountains">
      <div><i class="fa-solid fa-mountain-sun"></i></div>
      <p> Mountains</p>
    </div>
    <div class="filter" data-filter-property="Castles">
      <div><i class="fa-brands fa-fort-awesome"></i></div>
      <p> Castles</p>
    </div>
    <div class="filter" data-filter-property="Swiming pool">
      <div><i class="fa-solid fa-person-swimming"></i></div>
      <p>Swiming pool</p>
    </div>
    <div class="filter" data-filter-property="Farm">
      <div><i class="fa-solid fa-tractor"></i></div>
      <p>Farm</p>
    </div>
    <div class="filter" data-filter-property="Camping">
      <div><i class="fa-solid fa-campground"></i></div>
      <p>Camping</p>
    </div>
    <div class="filter"data-filter-property="Temple">
      <div><i class="fa-solid fa-gopuram"></i></div>
      <p>Temple</p>
    </div>
    <div class="filter"data-filter-property="Arctic">
      <div><i class="fa-solid fa-person-snowboarding"></i></div>
      <p>Arctic </p>
    </div>
    <div class="tax-toggle">
      <div class="form-check form-check-reverse form-switch">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
        <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
      </div>
    </div>
  </div>
</div>
   <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1">
     <% for(let listing of allListing ){ %>
        <a href="/listings/<%= listing._id %>" class="listing-link">
            <div class="card col listing-card " data-property="<%= listing.category %>">
                <img src="<%= listing.image.url %>" class="card-img-top" alt="listing image" style="height: 20rem;">
                <div class="card-img-overlay">abcd </div>
                <div class="card-body">
                  <p class="card-text">
                    <b> <%= listing.title %> </b> <br>
                    &#8377 <%= listing.price %>/night 
                    <i class="tax-info"> &nbsp; &nbsp; +18% gst</i>
                  </p>
                </div>
             </div>
        </a>
      <% } %>
   </div>
</body>
<script>
  let taxSwitch = document.getElementById("flexSwitchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    let taxInfo = document.getElementsByClassName("tax-info");
    console.log(taxInfo);
    for (info of taxInfo){
      if (info.style.display != "inline"){
        info.style.display = "inline";
       }else { 
        info.style.display = "none";
       } 
    };
  });

  // Get all filter elements
const filterElements = document.querySelectorAll(".filter");
const listingCards = document.querySelectorAll(".listing-card");

filterElements.forEach((filter) => {
    filter.addEventListener("click", () => {
        // Get the property to filter by from the data-filter-property attribute
        const filterProperty = filter.getAttribute("data-filter-property");

        // Hide all listing cards
        listingCards.forEach((card) => {
            card.style.display = "none";
        });

        if (filterProperty) {
            // Show only the listing cards that match the selected property
            const matchingCards = document.querySelectorAll(`[data-property="${filterProperty}"]`);
            matchingCards.forEach((card) => {
                card.style.display = "block";
            });
        } else {
            // If no filter is selected, show all listing cards
            listingCards.forEach((card) => {
                card.style.display = "block";
            });
        }
    });
});
searchInput.addEventListener("input", () => {
    const searchQuery = searchInput.value.trim(); // Get the search query and remove leading/trailing spaces
    filterListingCards(searchQuery);
});
</script>